geom_vline(aes(xintercept=LineOfScrimmage), color="yellow") +
geom_vline(aes(xintercept=10), color="grey") +
geom_vline(aes(xintercept=110), color="grey") +
xlim(0,120) +
ylim(0,53.3) +
labs(title = paste("Offense", dfPlay$PossessionTeam, "; ",
"PlayDirection", dfPlay$PlayDirection, "; ",
"FieldPosition", dfPlay$FieldPosition, "; ",
"HomeTeam", dfPlay$HomeTeamAbbr),
subtitle = paste("YardsToGoal", dfPlay$YardsToGoal))
select(dfPlay, YardLine, YardsToGoal, LineOfScrimmage)
ggplot(dfPlay) +
geom_point(aes(X, Y, color=Team)) +
geom_vline(aes(xintercept=LineOfScrimmage), color="yellow") +
geom_vline(aes(xintercept=10), color="grey") +
geom_vline(aes(xintercept=110), color="grey") +
xlim(0,120) +
ylim(0,53.3) +
labs(title = paste("Offense", dfPlay$PossessionTeam, "; ",
"PlayDirection", dfPlay$PlayDirection, "; ",
"FieldPosition", dfPlay$FieldPosition, "; ",
"HomeTeam", dfPlay$HomeTeamAbbr),
subtitle = paste("YardsToGoal", dfPlay$YardsToGoal))
dfPlay = filter(df, PlayId == df$PlayId[1]) %>%
mutate(YardsToGoal = YardLine + 50*(PossessionTeam==FieldPosition),
LOS_Side = ifelse((PlayDirection=="right" & PossessionTeam==FieldPosition) |
(PlayDirection=="left" & PossessionTeam!=FieldPosition),
"left", "right"),
LineOfScrimmage = ifelse(LOS_Side=="left", YardLine, YardLine+50))
select(dfPlay, YardLine, YardsToGoal, LineOfScrimmage)
ggplot(dfPlay) +
geom_point(aes(X, Y, color=Team)) +
geom_vline(aes(xintercept=LineOfScrimmage), color="yellow") +
geom_vline(aes(xintercept=10), color="grey") +
geom_vline(aes(xintercept=110), color="grey") +
xlim(0,120) +
ylim(0,53.3) +
labs(title = paste("Offense", dfPlay$PossessionTeam, "; ",
"PlayDirection", dfPlay$PlayDirection, "; ",
"FieldPosition", dfPlay$FieldPosition, "; ",
"HomeTeam", dfPlay$HomeTeamAbbr),
subtitle = paste("YardsToGoal", dfPlay$YardsToGoal))
dfPlay = filter(df, PlayId == df$PlayId[1]) %>%
mutate(YardsToGoal = YardLine + 50*(PossessionTeam==FieldPosition),
LOS_Side = ifelse((PlayDirection=="right" & PossessionTeam==FieldPosition) |
(PlayDirection=="left" & PossessionTeam!=FieldPosition),
"left", "right"),
LineOfScrimmage = ifelse(LOS_Side=="left", YardLine+10, 100-YardLine))
select(dfPlay, YardLine, YardsToGoal, LineOfScrimmage)
ggplot(dfPlay) +
geom_point(aes(X, Y, color=Team)) +
geom_vline(aes(xintercept=LineOfScrimmage), color="yellow") +
geom_vline(aes(xintercept=10), color="grey") +
geom_vline(aes(xintercept=110), color="grey") +
xlim(0,120) +
ylim(0,53.3) +
labs(title = paste("Offense", dfPlay$PossessionTeam, "; ",
"PlayDirection", dfPlay$PlayDirection, "; ",
"FieldPosition", dfPlay$FieldPosition, "; ",
"HomeTeam", dfPlay$HomeTeamAbbr),
subtitle = paste("YardsToGoal", dfPlay$YardsToGoal))
?xlim
ggplot(dfPlay) +
geom_point(aes(X, Y, color=Team)) +
geom_vline(aes(xintercept=LineOfScrimmage), color="yellow") +
geom_vline(aes(xintercept=10), color="grey") +
geom_vline(aes(xintercept=110), color="grey") +
coord_cartesian(xlim = c(0,120), ylim=c(0,53.3), expand=F) +
labs(title = paste("Offense", dfPlay$PossessionTeam, "; ",
"PlayDirection", dfPlay$PlayDirection, "; ",
"FieldPosition", dfPlay$FieldPosition, "; ",
"HomeTeam", dfPlay$HomeTeamAbbr),
subtitle = paste("YardsToGoal", dfPlay$YardsToGoal))
dfPlay = filter(df, PlayId == df$PlayId[1]) %>%
mutate(YardsToGoal = YardLine + 50*(PossessionTeam==FieldPosition),
LOS_Side = ifelse((PlayDirection=="right" & PossessionTeam==FieldPosition) |
(PlayDirection=="left" & PossessionTeam!=FieldPosition),
"left", "right"),
LineOfScrimmage = ifelse(LOS_Side=="left", YardLine+10, 110-YardLine))
ggplot(dfPlay) +
geom_point(aes(X, Y, color=Team)) +
geom_vline(aes(xintercept=LineOfScrimmage), color="yellow") +
geom_vline(aes(xintercept=10), color="grey") +
geom_vline(aes(xintercept=110), color="grey") +
coord_cartesian(xlim = c(0,120), ylim=c(0,53.3), expand=F) +
labs(title = paste("Offense", dfPlay$PossessionTeam, "; ",
"PlayDirection", dfPlay$PlayDirection, "; ",
"FieldPosition", dfPlay$FieldPosition, "; ",
"HomeTeam", dfPlay$HomeTeamAbbr),
subtitle = paste("YardsToGoal", dfPlay$YardsToGoal))
library(knitr)
opts_chunk$set(echo = TRUE,
collapse = FALSE,
comment = "",
strip.white = TRUE,
warning = FALSE,
message = FALSE,
out.width = "70%",
fig.align = "center")
library(tidyverse)
library(magrittr)
library(MASS)
library(rai)
loadData <- function(folderName, fileName, ...) {
if (.Platform$OS.type == "windows") {
dataPath = "D:/Data"
} else {
dataPath = "/media/kory/DATA/Data"
}
file = paste(dataPath, folderName, fileName, sep="/")
data.table::fread(file, ...)
}
library(knitr)
opts_chunk$set(echo = TRUE,
collapse = FALSE,
comment = "",
strip.white = TRUE,
warning = FALSE,
message = FALSE,
out.width = "70%",
fig.align = "center")
dfGoal = df %>%
select(YardLine, PossessionTeam, FieldPosition, PlayDirection, HomeTeamAbbr, VisitorTeamAbbr) %>%
distinct()
df = loadData("trainClean.csv")
loadData <- function(fileName = "train.csv", ...) {
file = paste("../input", fileName, sep="/")
data.table::fread(file, ...) %>%
as_tibble()
}
df = loadData("trainClean.csv")
dfGoal = df %>%
select(YardLine, PossessionTeam, FieldPosition, PlayDirection, HomeTeamAbbr, VisitorTeamAbbr) %>%
distinct()
df
df %>%
select(YardLine, PossessionTeam, FieldPosition, PlayDirection, HomeTeamAbbr, VisitorTeamAbbr) %>%
distinct()
df
dfGoal = df %>%
select(YardLine, PossessionTeam, FieldPosition, PlayDirection, HomeTeamAbbr, VisitorTeamAbbr) %>%
distinct()
detach("package:MASS", unload = TRUE)
dfGoal = df %>%
select(YardLine, PossessionTeam, FieldPosition, PlayDirection, HomeTeamAbbr, VisitorTeamAbbr) %>%
distinct()
dfGoal
dfToGoal = dfGoal %>%
mutate(YardsToGoal = YardLine + 50*(PossessionTeam==FieldPosition))
dfToGoal
library(knitr)
opts_chunk$set(echo = TRUE,
collapse = FALSE,
comment = "",
strip.white = TRUE,
warning = FALSE,
message = FALSE,
out.width = "70%",
fig.align = "center")
dfPlay = filter(df, PlayId == df$PlayId[1]) %>%
mutate(YardsToGoal = YardLine + 50*(PossessionTeam==FieldPosition),
LOS_Side = ifelse((PlayDirection=="right" & PossessionTeam==FieldPosition) |
(PlayDirection=="left" & PossessionTeam!=FieldPosition),
"left", "right"),
LineOfScrimmage = ifelse(LOS_Side=="left", YardLine+10, 110-YardLine))
select(dfPlay, YardLine, YardsToGoal, LineOfScrimmage)
ggplot(dfPlay) +
geom_point(aes(X, Y, color=Team)) +
geom_vline(aes(xintercept=LineOfScrimmage), color="yellow") +
geom_vline(aes(xintercept=10), color="grey") +
geom_vline(aes(xintercept=110), color="grey") +
coord_cartesian(xlim = c(0,120), ylim=c(0,53.3), expand=F) +
labs(title = paste("Offense", dfPlay$PossessionTeam, "; ",
"PlayDirection", dfPlay$PlayDirection, "; ",
"FieldPosition", dfPlay$FieldPosition, "; ",
"HomeTeam", dfPlay$HomeTeamAbbr),
subtitle = paste("YardsToGoal", dfPlay$YardsToGoal))
dfPlay = filter(df, PlayId == df$PlayId[1]) %>%
mutate(YardsToGoal = YardLine + (100-2*YardLine)*(PossessionTeam==FieldPosition),
LOS_Side = ifelse((PlayDirection=="right" & PossessionTeam==FieldPosition) |
(PlayDirection=="left" & PossessionTeam!=FieldPosition),
"left", "right"),
LineOfScrimmage = ifelse(LOS_Side=="left", YardLine+10, 110-YardLine))
select(dfPlay, YardLine, YardsToGoal, LineOfScrimmage)
ggplot(dfPlay) +
geom_point(aes(X, Y, color=Team)) +
geom_vline(aes(xintercept=LineOfScrimmage), color="yellow") +
geom_vline(aes(xintercept=10), color="grey") +
geom_vline(aes(xintercept=110), color="grey") +
coord_cartesian(xlim = c(0,120), ylim=c(0,53.3), expand=F) +
labs(title = paste("Offense", dfPlay$PossessionTeam, "; ",
"PlayDirection", dfPlay$PlayDirection, "; ",
"FieldPosition", dfPlay$FieldPosition, "; ",
"HomeTeam", dfPlay$HomeTeamAbbr),
subtitle = paste("YardsToGoal", dfPlay$YardsToGoal))
select(dfPlay, YardLine, YardsToGoal, LineOfScrimmage)
ggplot(dfPlay) +
geom_point(aes(X, Y, color=Team)) +
geom_vline(aes(xintercept=LineOfScrimmage), color="yellow") +
geom_vline(aes(xintercept=10), color="grey") +
geom_vline(aes(xintercept=110), color="grey") +
coord_cartesian(xlim = c(0,120), ylim=c(0,53.3), expand=F) +
labs(title = paste("Offense", dfPlay$PossessionTeam, "; ",
"PlayDirection", dfPlay$PlayDirection, "; ",
"FieldPosition", dfPlay$FieldPosition, "; ",
"HomeTeam", dfPlay$HomeTeamAbbr),
subtitle = paste("YardsToGoal", dfPlay$YardsToGoal))
unique(df$PlayDirection)
library(knitr)
opts_chunk$set(echo = TRUE,
collapse = FALSE,
comment = "",
strip.white = TRUE,
warning = FALSE,
message = FALSE,
out.width = "70%",
fig.align = "center")
dfGoal = df %>%
mutate(YardsToGoal = YardLine + (100-2*YardLine)*(PossessionTeam==FieldPosition))
library(knitr)
opts_chunk$set(echo = TRUE,
collapse = FALSE,
comment = "",
strip.white = TRUE,
warning = FALSE,
message = FALSE,
out.width = "70%",
fig.align = "center")
library(tidyverse)
library(magrittr)
loadData <- function(fileName = "train.csv", ...) {
file = paste("../input", fileName, sep="/")
data.table::fread(file, ...) %>%
as_tibble()
}
df = loadData("trainClean.csv")
dfGoal = df %>%
mutate(YardsToGoal = YardLine + (100-2*YardLine)*(PossessionTeam==FieldPosition))
dfGoal
hist(dfGoal$YardsToGoal
hist(dfGoal$YardsToGoal)
hist(dfGoal$YardsToGoal)
df = df %>%
mutate(YardsToGoal = YardLine + (100-2*YardLine)*(PossessionTeam==FieldPosition))
df = df %>%
mutate(LOS_Side = ifelse((PlayDirection=="right" & PossessionTeam==FieldPosition) |
(PlayDirection=="left" & PossessionTeam!=FieldPosition),
"left", "right"),
LineOfScrimmage = ifelse(LOS_Side=="left", YardLine+10, 110-YardLine))
?distinct
df %>%
distinct(PlayId) %>%
ggplot() +
geom_hist()
df %>%
distinct(PlayId) %>%
ggplot() +
geom_histogram()
df %>%
distinct(PlayId) %>%
ggplot(aes(x=YardsToGoal)) +
geom_histogram()
df %>%
distinct(PlayId)
df %>%
distinct(PlayId, .keep_all=T) %>%
ggplot(aes(x=YardsToGoal)) +
geom_histogram()
df = df %>%
mutate(LOS_Side = ifelse((PlayDirection=="right" & PossessionTeam==FieldPosition) |
(PlayDirection=="left" & PossessionTeam!=FieldPosition),
"left", "right"),
LineOfScrimmage = ifelse(LOS_Side=="left", YardLine+10, 110-YardLine)) %>%
group_by(PlayId) %>%
summarise(aveDist_LOS = mean(X-LineOfScrimmage))
df = loadData("trainClean.csv")
dfLOS = df %>%
mutate(LOS_Side = ifelse((PlayDirection=="right" & PossessionTeam==FieldPosition) |
(PlayDirection=="left" & PossessionTeam!=FieldPosition),
"left", "right"),
LineOfScrimmage = ifelse(LOS_Side=="left", YardLine+10, 110-YardLine)) %>%
group_by(PlayId) %>%
summarise(aveDist_LOS = mean(X-LineOfScrimmage))
ggplot(dfLOS) +
geom_histogram(aes(aveDist_LOS))
dfLOS = df %>%
mutate(LOS_Side = ifelse((PlayDirection=="right" & PossessionTeam==FieldPosition) |
(PlayDirection=="left" & PossessionTeam!=FieldPosition),
"left", "right"),
LineOfScrimmage = ifelse(LOS_Side=="left", YardLine+10, 110-YardLine)) %>%
group_by(PlayId) %>%
summarise(aveDist_LOS = mean(abs(X-LineOfScrimmage)))
ggplot(dfLOS) +
geom_histogram(aes(aveDist_LOS))
dfLOS = df %>%
mutate(LOS_Side = ifelse((PlayDirection=="right" & PossessionTeam==FieldPosition) |
(PlayDirection=="left" & PossessionTeam!=FieldPosition),
"left", "right"),
LineOfScrimmage = ifelse(LOS_Side=="left", YardLine+10, 110-YardLine)) %>%
group_by(PlayId) %>%
summarise(AveDist_LOS = mean(abs(X-LineOfScrimmage)))
arrange(dfLOS, desc(AveDist_LOS))
longDist = arrange(dfLOS, desc(AveDist_LOS)) %>%
pull(PlayID) %>%
head()
longDist = arrange(dfLOS, desc(AveDist_LOS)) %>%
pull(PlayId) %>%
head()
library(knitr)
opts_chunk$set(echo = TRUE,
collapse = FALSE,
comment = "",
strip.white = TRUE,
warning = FALSE,
message = FALSE,
out.width = "70%",
fig.align = "center")
plotPlay = function(dfPlay, featureName) {
ggplot(dfPlay) +
geom_point(aes(X, Y, color=Team)) +
geom_vline(aes(xintercept=LineOfScrimmage), color="yellow") +
geom_vline(aes(xintercept=10), color="grey") +
geom_vline(aes(xintercept=110), color="grey") +
coord_cartesian(xlim = c(0,120), ylim=c(0,53.3), expand=F) +
labs(title = paste("Offense", dfPlay$PossessionTeam, "; ",
"PlayDirection", dfPlay$PlayDirection, "; ",
"FieldPosition", dfPlay$FieldPosition, "; ",
"HomeTeam", dfPlay$HomeTeamAbbr),
subtitle = paste(featureName, dfPlay[, featureName]))
}
plotPlay(filter(dfLos, PlayId==longDist[1]))
plotPlay(filter(dfLOS, PlayId==longDist[1]))
plotPlay(filter(dfLOS, PlayId==longDist[1]), "AveDist_LOS")
plotPlay(filter(dfLOS, PlayId==longDist[1]), "AveDist_LOS")
plotPlay = function(dfPlay, featureName, featureValue) {
ggplot(dfPlay) +
geom_point(aes(X, Y, color=Team)) +
geom_vline(aes(xintercept=LineOfScrimmage), color="yellow") +
geom_vline(aes(xintercept=10), color="grey") +
geom_vline(aes(xintercept=110), color="grey") +
coord_cartesian(xlim = c(0,120), ylim=c(0,53.3), expand=F) +
labs(title = paste("Offense", dfPlay$PossessionTeam, "; ",
"PlayDirection", dfPlay$PlayDirection, "; ",
"FieldPosition", dfPlay$FieldPosition, "; ",
"HomeTeam", dfPlay$HomeTeamAbbr),
subtitle = paste(featureName, featureValue))
}
dfLOS = df %>%
mutate(LOS_Side = ifelse((PlayDirection=="right" & PossessionTeam==FieldPosition) |
(PlayDirection=="left" & PossessionTeam!=FieldPosition),
"left", "right"),
LineOfScrimmage = ifelse(LOS_Side=="left", YardLine+10, 110-YardLine)) %>%
group_by(PlayId) %>%
summarise(AveDist_LOS = mean(abs(X-LineOfScrimmage))) %>%
arrange(desc(AveDist_LOS))
longDist = pull(PlayId) %>%
head()
longDist = dfLOS %>%
pull(PlayId) %>%
head()
dfLos[1, "AveDist_LOS
"]"
asdf
000))))
dfLos[1, "AveDist_LOS"]
dfLOS[1, "AveDist_LOS"]
plotPlay(filter(dfLOS, PlayId==longDist[index]), "AveDist_LOS", dfLOS[1, "AveDist_LOS"])
index=1
plotPlay(filter(dfLOS, PlayId==longDist[index]), "AveDist_LOS", dfLOS[1, "AveDist_LOS"])
plotPlay(filter(df, PlayId==longDist[index]), "AveDist_LOS", dfLOS[1, "AveDist_LOS"])
df %<>%
mutate(LOS_Side = ifelse((PlayDirection=="right" & PossessionTeam==FieldPosition) |
(PlayDirection=="left" & PossessionTeam!=FieldPosition),
"left", "right"),
LineOfScrimmage = ifelse(LOS_Side=="left", YardLine+10, 110-YardLine))
dfLos = df %>%
group_by(PlayId) %>%
summarise(AveDist_LOS = mean(abs(X-LineOfScrimmage))) %>%
arrange(desc(AveDist_LOS))
longDist = dfLOS %>%
pull(PlayId) %>%
head()
index=1
plotPlay(filter(df, PlayId==longDist[index]), "AveDist_LOS", dfLOS[1, "AveDist_LOS"])
colnames(df)
library(knitr)
opts_chunk$set(echo = TRUE,
collapse = FALSE,
comment = "",
strip.white = TRUE,
warning = FALSE,
message = FALSE,
out.width = "70%",
fig.align = "center")
runLM = function(theData, theResponse) {
lm(theResponse ~ ., data=theData)
}
loadData <- function(fileName = "train.csv", ...) {
file = paste("../input", fileName, sep="/")
data.table::fread(file, ...) %>%
as_tibble()
}
df = loadData("trainClean.csv")
runLM = function(theData, theResponse) {
lm(theResponse ~ ., data=theData)
}
getProbs = function(est, sd, rangeY=NULL) {
if (is.null(rangeY)) {
rangeY = log(pmax(seq(-99,99) + 15, 0))
}
pnorm(rangeY, est, sd)
}
crps = function(probVec, y, rangeY=NULL) {
if (is.null(rangeY)) {
rangeY = log(pmax(seq(-99,99) + 15, 0))
}
Hy = (rangeY >= y)
mean((probVec-Hy)^2)
}
predictCV = function(theResponse, theData, modelFnc, k=5) {
if (any(grepl("runAuction", capture.output(modelFnc)))) {
modFnc = function(data) {
# to send original data; modified it below for use in OOS prediction
theDataO = apply(data[, -1, drop=F], 2, function(col) col^(1/startDeg))
modelFnc(theDataO, data[, 1])$model
}
theData = model.matrix(~. - 1, data=as.data.frame(theData))
startDeg = formals(modelFnc)$startDeg
theData = apply(theData, 2, function(col) col^startDeg)  # modify for OOS
cat("rai", startDeg, ";\n")
} else {
cat("other; \n")
modFnc = function(data) {
modelFnc(data[, -1, drop=F], data[, 1])
}
}
theResponse = as.matrix(theResponse)
data = data.frame(y=theResponse, theData)
predicted = crossv_kfold(data, k = k) %>%
mutate(
model = map(train, ~modFnc(as.data.frame(.))),
predicted = map2(model, test, ~ add_predictions(as.data.frame(.y), .x)),
sd = map_dbl(model, ~ summary(.)$sigma)
) %>%
select(predicted, sd) %>%
unnest(predicted) %>%
mutate(
probEst = map2(pred, sd, getProbs),
crps = map2_dbl(probEst, y, crps)
)
mean(predicted$crps)
}
# select(predicted, y, pred)
# pred = tibble(dfSub$Yards, exp(predicted$pred) - 15)
# index = 200
# mean(predicted$y)
# plot(rangeY, predicted$probEst[[index]])
# abline(v=predicted$y[index])
# ggplot(predicted) +
# geom_point(aes(pred, y-pred))
errorOOS = function(theResponse, theData, fncs, k=5) {
map(fncs, ~ predictCV(theResponse, theData, ., k))
}
dfSub = df %>%
distinct(PlayId, .keep_all = T) %>%
# select(Yards, Distance, Down) %>%
select(Yards, Distance, Down, YardLine, NflIdRusher, OffenseFormation,
OffensePersonnel, DefendersInTheBox, DefensePersonnel) %>%
mutate(Down = as.factor(Down))
theResponse = log(pmax(dfSub$Yards + 15, 0))
theData = select(dfSub, -Yards)
library(tidyverse)
library(rai)
dfSub = df %>%
distinct(PlayId, .keep_all = T) %>%
# select(Yards, Distance, Down) %>%
select(Yards, Distance, Down, YardLine, NflIdRusher, OffenseFormation,
OffensePersonnel, DefendersInTheBox, DefensePersonnel) %>%
mutate(Down = as.factor(Down))
library(tidyverse)
library(magrittr)
loadData <- function(fileName = "train.csv", ...) {
file = paste("../input", fileName, sep="/")
data.table::fread(file, ...) %>%
as_tibble()
}
df = loadData("trainClean.csv")
df = df %>%
mutate(YardsToGoal = YardLine + (100-2*YardLine)*(PossessionTeam==FieldPosition))
df %>%
distinct(PlayId, .keep_all=T) %>%
ggplot(aes(x=YardsToGoal)) +
geom_histogram()
df %<>%
mutate(LOS_Side = ifelse((PlayDirection=="right" & PossessionTeam==FieldPosition) |
(PlayDirection=="left" & PossessionTeam!=FieldPosition),
"left", "right"),
LineOfScrimmage = ifelse(LOS_Side=="left", YardLine+10, 110-YardLine))
dfLos = df %>%
group_by(PlayId) %>%
summarise(AveDist_LOS = mean(abs(X-LineOfScrimmage))) %>%
arrange(desc(AveDist_LOS))
ggplot(dfLOS) +
geom_histogram(aes(aveDist_LOS))
ggplot(dfLOS) +
geom_histogram(aes(AveDist_LOS))
longDist = dfLOS %>%
pull(PlayId) %>%
head()
index=1
plotPlay(filter(df, PlayId==longDist[index]), "AveDist_LOS", dfLOS[1, "AveDist_LOS"])
filter(df, PlayId==longDist[index])
df %<>%
mutate(LOS_Side = ifelse((PlayDirection=="right" & PossessionTeam==FieldPosition) |
(PlayDirection=="left" & PossessionTeam!=FieldPosition),
"left", "right"),
LineOfScrimmage = ifelse(LOS_Side=="left", YardLine+10, 110-YardLine))
dfLOS = df %>%
group_by(PlayId) %>%
summarise(AveDist_LOS = mean(abs(X-LineOfScrimmage))) %>%
arrange(desc(AveDist_LOS))
ggplot(dfLOS) +
geom_histogram(aes(AveDist_LOS))
longDist = dfLOS %>%
pull(PlayId) %>%
head()
ggplot(dfLOS) +
geom_histogram(aes(AveDist_LOS))
longDist = dfLOS %>%
pull(PlayId) %>%
head()
index=1
plotPlay(filter(df, PlayId==longDist[index]), "AveDist_LOS", dfLOS[1, "AveDist_LOS"])
library(knitr)
opts_chunk$set(echo = TRUE,
collapse = FALSE,
comment = "",
strip.white = TRUE,
warning = FALSE,
message = FALSE,
out.width = "70%",
fig.align = "center")
df %>%
select(PossessionTeam, FieldPosition, HomeTeamAbbr, VisitorTeamAbbr) %>%
summarise.all(function(col) sum(is.na(col)))
?summarise
df %>%
select(PossessionTeam, FieldPosition, HomeTeamAbbr, VisitorTeamAbbr) %>%
summarise_all(function(col) sum(is.na(col)))
df = loadData("trainClean_py.csv")
ggplot(df) +
geom_histogram(aes(DistanceToLOS))
dfPy = loadData("trainClean_py.csv")
ggplot(dfPy) +
geom_histogram(aes(DistanceToLOS))
dfPy
longDist = dfPy %>%
pull(PlayId) %>%
head()
longDist = dfPy %>%
arrange(desc(DistanceToLos)) %>%
pull(PlayId) %>%
head()
longDist = dfPy %>%
arrange(desc(DistanceToLOS)) %>%
pull(PlayId) %>%
head()
index=1
plotPlay(filter(df, PlayId==longDist[index]), "DistanceToLOS", dfLOS[1, "DistanceToLOS"])
df = loadData("trainClean.csv")
plotPlay(filter(df, PlayId==longDist[index]), "DistanceToLOS", dfLOS[1, "DistanceToLOS"])
dfPy = loadData("trainClean_py.csv") %>%
arrange(desc(DestanceToLOS))
dfPy = loadData("trainClean_py.csv") %>%
arrange(desc(DistanceToLOS))
ggplot(dfPy) +
geom_histogram(aes(DistanceToLOS))
longDist = dfPy %>%
pull(PlayId) %>%
head()
index=1
plotPlay(filter(df, PlayId==longDist[index]), "DistanceToLOS", dfPy[1, "DistanceToLOS"])
df %<>%
mutate(LOS_Side = ifelse((PlayDirection=="right" & PossessionTeam==FieldPosition) |
(PlayDirection=="left" & PossessionTeam!=FieldPosition),
"left", "right"),
LineOfScrimmage = ifelse(LOS_Side=="left", YardLine+10, 110-YardLine))
plotPlay(filter(df, PlayId==longDist[index]), "DistanceToLOS", dfPy[1, "DistanceToLOS"])
dfPy %>%
filter(PlayId==longDist[index])
dfPy %>%
filter(PlayId==longDist[index]) %>%
select(PossessionTeam, FieldPosition, HomeTeamAbbr, VisitorTeamAbbr, DistanceToGoal, DistanceToLOS)
plotPlay(filter(df, PlayId==longDist[index]), "DistanceToLOS", dfPy[1, "DistanceToLOS"])
dfPy %>%
filter(PlayId==longDist[index]) %>%
select(PossessionTeam, FieldPosition, HomeTeamAbbr, VisitorTeamAbbr, DistanceToGoal, DistanceToLOS)
